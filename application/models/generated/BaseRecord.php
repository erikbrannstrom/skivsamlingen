<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Record', 'default');

/**
 * BaseRecords
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $artist_id
 * @property string $title
 * @property integer $year
 * @property string $format
 * @property Artist $Artist 
 * @property Doctrine_Collection $Comments
 * @property Doctrine_Collection $RecordsUsers
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseRecord extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('records');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('artist_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('title', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('year', 'integer', null, array(
             'type' => 'integer',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('format', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Artist', array(
             'local' => 'artist_id',
             'foreign' => 'id'));

        $this->hasMany('Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'record_id'));

        $this->hasMany('User as Users', array(
             'local' => 'record_id',
             'foreign' => 'user_id',
             'refClass' => 'RecordsUsers'));
    }
}